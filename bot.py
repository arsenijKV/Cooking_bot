from logic import DB_Manager
from config import *
from telebot import TeleBot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telebot import types

bot = TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, """–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–≤–∞—Ä–µ–Ω–æ–∫(only eng)\n
–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/random3 –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 3 —Ä–µ—Ü–µ–ø—Ça
/random10- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 10 —Ä–µ—Ü–µ–ø—Ç–æ–≤
/random5- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 5 —Ä–µ—Ü–µ–ø—Ç–æ–≤
/info (–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞) - —Ä–∞—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –∏ –∫–∞–∫ –≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–æ
/ingredient (–Ω–∞–∑–≤–∞–Ω–∏–µ –ò–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ça(–Ω–∞ –∞–Ω–≥–ª.) - –≤–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –∏ –ø–æ–ª—É—á–∏ 15 –±–ª—é–¥ —Å –Ω–∏–º
/add_recipe –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π —Ä–µ—Ü–µ–ø—Ç
/add_favorite (—Ä–µ—Ü–µ–ø—Ç)-–¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Ä–µ—Ü–µ–ø—Ç
/my_favorites - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ) """)
    
@bot.message_handler(commands=['help'])
def start_command(message):
    bot.send_message(message.chat.id, """–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–≤–∞—Ä–µ–Ω–æ–∫(only eng)\n
–º–æ–∏ –∫–æ–º–∞–Ω–¥—ã:
/random3 –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 3 —Ä–µ—Ü–µ–ø—Ça
/random10- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 10 —Ä–µ—Ü–µ–ø—Ç–æ–≤
/random5- –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç 5 —Ä–µ—Ü–µ–ø—Ç–æ–≤
/info (–Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞) - —Ä–∞—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –∏ –∫–∞–∫ –≥–æ—Ç–æ–≤–∏—Ç—å –±–ª—é–¥–æ
/ingredient (–Ω–∞–∑–≤–∞–Ω–∏–µ –ò–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ça(–Ω–∞ –∞–Ω–≥–ª.) - –≤–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –∏ –ø–æ–ª—É—á–∏ 15 –±–ª—é–¥ —Å –Ω–∏–º
/add_recipe –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π —Ä–µ—Ü–µ–ø—Ç
/add_favorite (—Ä–µ—Ü–µ–ø—Ç)-–¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ —Ä–µ—Ü–µ–ø—Ç
/my_favorites - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã ) """)


@bot.message_handler(commands=['random3'])
def start_command(message):
    ran3 =  manager.get_random_recipe_3()
    ran3_text = "\n".join([recipe[0] for recipe in ran3])  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É
    bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à–∏ 3 —Ä–µ—Ü–µ–ø—Ç–∞:\n{ran3_text}")


@bot.message_handler(commands=['random5'])
def random5_command(message):
    ran5 = manager.get_random_recipe_5()
    ran5_message = "\n".join([recipe[0] for recipe in ran5])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç–æ–≤
    bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à–∏ 5 —Ä–µ—Ü–µ–ø—Ç–æ–≤:\n{ran5_message}")

@bot.message_handler(commands=['random10'])
def random10_command(message):
    ran10 = manager.get_random_recipe_10()
    ran10_message = "\n".join([recipe[0] for recipe in ran10])  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ—Ü–µ–ø—Ç–æ–≤
    bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à–∏ 10 —Ä–µ—Ü–µ–ø—Ç–æ–≤:\n{ran10_message}")

@bot.message_handler(commands=['info'])
def info(message):
    name = " ".join(message.text.split()[1:])
    info = manager.get_info_recipe(name)
    if info:
        response = ''
        for rec in info:
            recipe_name, minutes, n_steps, steps, ingredients = rec
            response += f"üçΩ –ù–∞–∑–≤–∞–Ω–∏–µ: {recipe_name}\n"
            response += f"‚è± –í—Ä–µ–º—è: {minutes} –º–∏–Ω—É—Ç\n"
            response += f"üìã –®–∞–≥–æ–≤: {n_steps}\n"
            response += f"üßæ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {ingredients}\n"
            response += f"üî™ –®–∞–≥–∏: {steps}\n"
        bot.send_message(message.chat.id, response)
    else:
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω ")



@bot.message_handler(commands=['ingredient'])
def ingredient(message):
    name = " ".join(message.text.split()[1:])
    if name:
        ingr = manager.find_by_ingredient(name)
        ingridient = "\n".join([recipe[0] for recipe in ingr])
        bot.send_message(message.chat.id, f"–í–æ—Ç 15 —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É {name}:\n{ingridient}")
    else:
        bot.send_message(message.chat.id, f"–ò–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω ")




@bot.message_handler(commands=['add_favorite'])
def add_favorite(message):
    name = " ".join(message.text.split()[1:])
    user_id = message.from_user.id
    add = manager.add_favorite(user_id, name)
    if add:
        bot.send_message(message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{name}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–∑–±—Ä–∞–Ω–æ–µ")
    else:
        bot.send_message(message.chat.id, "Erorr") 




@bot.message_handler(commands=['my_favorites'])
def myfavorites_command(message):
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="show_favorites"))
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–∏ –ª—é–±–∏–º—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã üëá", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == "show_favorites")
def show_favorites_callback(call):
    user_id = call.from_user.id
    favorites = manager.get_favorites(user_id)
    if not favorites:
        bot.send_message(call.message.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç—É –∏–∑–±—Ä–∞–Ω—ã—Ö, –¥–æ–±–∞–≤—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_favorite (—Ä–µ—Ü–µ–ø—Ç)')
    else:
        markup = InlineKeyboardMarkup()
        for (name,) in favorites:
            markup.add(InlineKeyboardButton(text=name, callback_data=f"fav_{name}"))
        bot.send_message(call.message.chat.id, "–í–æ—Ç —Ç–≤–æ–∏ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ãüëá", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data.startswith("fav_"))
def info(call):
    name = call.data[4:]
    info = manager.get_info_recipe(name)
    if info:
        response = ''
        for rec in info:
            recipe_name, minutes, n_steps, steps, ingredients = rec
            response += f"üçΩ –ù–∞–∑–≤–∞–Ω–∏–µ: {recipe_name}\n"
            response += f"‚è± –í—Ä–µ–º—è: {minutes} –º–∏–Ω—É—Ç\n"
            response += f"üìã –®–∞–≥–æ–≤: {n_steps}\n"
            response += f"üßæ –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {ingredients}\n"
            response += f"üî™ –®–∞–≥–∏: {steps}\n"
        bot.send_message(call.message.chat.id, response)
    else:
        bot.send_message(call.message.chat.id, f"–†–µ—Ü–µ–ø—Ç '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω ")






@bot.message_handler(commands=['add_recipe'])
def add(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ(—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –≤—Å–µ –ø–∏—Å–∞—Ç—å –Ω–∞ –∞–Ω–≥–ª.(–ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏)) :")
    bot.register_next_step_handler(message, name_recipe)

def name_recipe(message):
    name = message.text
    data = [name]
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è")
    bot.register_next_step_handler(message, minutes , data=data)

def minutes(message, data):
    minutes = message.text
    data.append(minutes)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É ")
    bot.register_next_step_handler(message, date, data=data)  

def date(message, data):
    date = message.text
    data.append(date)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏(–ø–æ —Ç–∏–ø—É –≥–æ—Ä—è—á–∏–µ,—Ö–æ–ª–æ–¥–Ω–æ–µ) ")
    bot.register_next_step_handler(message, tags, data=data)  

def tags(message, data):
    tags = message.text
    data.append(tags)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —ç—Ç–∞–ø—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è(–ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ —Å—Ç–∞–≤—å—Ç–µ –∑–∞–ø—è—Ç–∞—é) ")
    bot.register_next_step_handler(message, steps, data=data)  

def steps(message, data):
    steps = message.text
    data.append(steps)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ ")
    bot.register_next_step_handler(message, description, data=data)  

def description(message, data):
    description = message.text
    data.append(description)
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç—ã(–ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–∞ —Å—Ç–∞–≤—å—Ç–µ –∑–∞–ø—è—Ç–∞—é) ")
    bot.register_next_step_handler(message, ingredients, data=data) 

def ingredients(message, data):
    ingredients = message.text
    user_id = message.from_user.id
    data.insert(2, user_id)
    data.append(ingredients)
    manager.add_recipe([tuple(data)])
    bot.send_message(message.chat.id, " ‚úÖ—É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")        





if __name__ == '__main__':
    manager = DB_Manager(DATABASE)
    bot.infinity_polling()